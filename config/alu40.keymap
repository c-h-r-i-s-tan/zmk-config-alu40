/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        ISLHD: ISLHD {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp U &kp N &kp D &kp A &kp Y &kp DOT &kp N9>;
            label = "ISLHD";
        };

        EMPLY: EMPLY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N5 &kp N3 &kp N8 &kp N0 &kp N0 &kp N4 &kp N3 &kp N3>;
            label = "EMPLY";
        };

        plus6m: plus6m {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp PLUS &kp N6 &kp M>;
            label = "PLUS6M";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   "   | ENTR  |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |  SFT  |
            // | MO(6) | LCTL | LALT | LGUI |    LOWR     |     RAIS      | RGUI | RALT | RCTL  | MO(5) |

            bindings = <
&kp ESC    &kp Q             &kp W     &kp E     &kp R        &kp T  &kp Y  &kp U        &kp I         &kp O          &kp P                 &kp BSPC
&kp TAB    &mt LEFT_SHIFT A  &kp S     &kp D     &lt 4 F      &kp G  &kp H  &lt 4 J      &kp K         &kp L          &mt RIGHT_SHIFT SQT   &kp ENTER
&kp LSHFT  &mt LEFT_SHIFT Z  &kp X     &kp C     &kp V        &kp B  &kp N  &kp M        &kp COMMA     &kp DOT        &mt RIGHT_SHIFT FSLH  &kp RIGHT_SHIFT
&mo 6      &kp LCTRL         &kp LALT  &kp LGUI  &lt 1 ENTER  &none  &none  &lt 2 SPACE  &kp LEFT_GUI  &kp RIGHT_ALT  &kp RCTRL             &mo 5
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&none     &none  &none     &kp UP_ARROW    &none            &kp TILDE  &none      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp DELETE  &kp BACKSPACE
&kp CLCK  &none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp GRAVE  &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS    &trans
&trans    &none  &none     &none           &none            &none      &kp UNDER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL   &trans
&none     &none  &none     &none           &trans           &none      &none      &mo 3         &kp NUMBER_0  &kp KP_DOT    &none       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&none   &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPS  &kp ASTRK   &none         &kp DEL               &kp BSPC
&none   &none     &none   &none     &none       &none        &none      &none     &none       &none         &kp PIPE              &none
&trans  &none     &none   &none     &none       &none        &none      &none     &kp SEMI    &kp COLON     &kp NON_US_BACKSLASH  &none
&trans  &trans    &trans  &trans    &mo 3       &none        &none      &trans    &kp C_PREV  &kp C_VOL_UP  &kp C_VOL_DN          &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
&sys_reset       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans  &trans  &trans      &trans  &trans  &bt BT_CLR
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans  &trans      &trans  &trans  &trans
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans  &trans      &trans  &trans  &trans
&bootloader      &trans           &trans           &trans           &trans           &trans           &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        symbols {
            bindings = <
&kp LEFT_PARENTHESIS  &none  &none  &none  &none   &trans  &none  &none   &none     &none      &none                 &kp RIGHT_PARENTHESIS
&kp LEFT_BRACE        &none  &none  &none  &trans  &none   &none  &trans  &none     &none      &kp PIPE              &kp RIGHT_BRACE
&kp LEFT_BRACKET      &none  &none  &none  &none   &none   &none  &none   &kp SEMI  &kp COLON  &kp NON_US_BACKSLASH  &kp RIGHT_BRACKET
&none                 &none  &none  &none  &none   &none   &none  &none   &none     &none      &none                 &none
            >;
        };

        pass {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &EMPLY  &ISLHD  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none   &none   &none  &none  &plus6m
&none  &none  &none  &none  &none  &none  &none  &none   &none   &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none   &none   &none  &none  &none
            >;
        };

        Fn {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };
    };
};
